name: verify-places

on:
  schedule:
    - cron: "0 3 * * *"   # daily 03:00 UTC
  workflow_dispatch: {}
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "docs/**"
      - ".github/**"
      - "!/.github/workflows/verify.yml"  # ← 自分自身の更新は許可

permissions:
  contents: write          # push/PR 作成に必要
  pull-requests: write
  actions: read

# 同一ブランチでの多重起動を抑止（手動実行を潰さない設定）
concurrency:
  group: verify-places-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-verify:
    # bot の自己更新ブランチでは実行しない（PRループ防止）
    if: github.ref != 'refs/heads/bot/verify-update'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # jsdom は入れない。fetch だけ使う。
      # プロジェクト依存を汚さないため no-save で node-fetch@3 を追加（ESM 対応）
      - name: Install deps (no-save)
        run: npm i --no-save --no-package-lock node-fetch@3

      - name: List public JSON targets
        run: |
          echo "== JSON files in public (raw) =="
          find public -type f -name "*.json" -print | sort || true
          echo
          echo "== scan.mjs target logic =="
          node -e 'const fs=require("fs"),p=require("path");
          function collect(d){if(!fs.existsSync(d))return[];let r=[];
            for(const f of fs.readdirSync(d)){const q=p.join(d,f);const s=fs.statSync(q);
              if(s.isDirectory())r=r.concat(collect(q));
              else if(q.toLowerCase().endsWith(".json"))r.push(q)}
          return r}
          const PUB="public";
          let t=[...collect(p.join(PUB,"data","places"))];
          if(fs.existsSync(p.join(PUB,"places.json")))t.push(p.join(PUB,"places.json"));
          echo "::group::Targets"; echo "----"; echo; 
          console.log(t.sort().join("\n")||"(no targets)");' | tee target-files.txt

      - name: Probe JSON shape (first 10 files)
        run: |
          node -e 'const fs=require("fs");
          function load(p){try{return JSON.parse(fs.readFileSync(p,"utf8"))}catch(e){return null}}
          const files = fs.readFileSync("target-files.txt","utf8").split("\n").filter(Boolean);
          const pick = files.slice(0,10);
          for(const f of pick){
            const js = load(f) || {};
            const keys = Object.keys(js||{});
            let arr = Array.isArray(js) ? js : (js.places || js.items || js.results || js.data || js.entries || []);
            console.log(`[shape] ${f}  keys=${keys.slice(0,8).join(",")}  len=${Array.isArray(arr)?arr.length:"NA"}`);
          }' | tee shape.txt

      - name: Run verifier (verbose)
        run: |
          set -o pipefail
          echo "::group::Run scan.mjs"
          NODE_OPTIONS="--trace-uncaught" VERBOSE=1 node tools/verify/scan.mjs | tee scan.log
          echo "::endgroup::"

      - name: Show changed files
        run: |
          echo "::group::Changed files"
          git status --porcelain || true
          git diff --name-only || true
          echo "::endgroup::"

      # 差分があるかどうかを判定
      - name: Detect diff
        id: diff
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: verify-logs
          path: |
            target-files.txt
            shape.txt
            scan.log
          if-no-files-found: ignore
          retention-days: 7

      - name: Write step summary
        if: always()
        run: |
          echo "## Verify summary" >> $GITHUB_STEP_SUMMARY
          echo "- Targets: $(wc -l < target-files.txt)" >> $GITHUB_STEP_SUMMARY
          echo "- Changed files: $([[ '${{ steps.diff.outputs.changed }}' == 'true' ]] && echo yes || echo no)" >> $GITHUB_STEP_SUMMARY
          echo "- Log artifact: verify-logs" >> $GITHUB_STEP_SUMMARY

      # 差分があるときだけ PR 作成（空PR防止）
      - name: Create PR
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bot/verify-update
          commit-message: "chore(verify): auto-update verification labels & evidence"
          title: "Auto: verification update"
          body: |
            Automated verification run.

            - Target file list and shape are attached as artifacts (verify-logs).
            - Please review labels (✅/⚠︎) and metadata under `verification`.
          labels: "verification,bot"
          add-paths: |
            public/**/*.json
            public/data/summary.json
